on: [push]

jobs:
  setup_nextcloud:
    runs-on: ubuntu-latest
    name: Run e2e test
    strategy:
      matrix:
        api-level: [ 24 ] #, 25, 26, 27, 28, 29 ]
        nextcloud-version: [ 'nextcloud:latest' ] #, 'nextcloud:stable', 'nextcloud:production' ]
    services:
      nextcloud:
        image: ${{ matrix.nextcloud-version }}
        env:
          SQLITE_DATABASE: db.sqlite
          NEXTCLOUD_ADMIN_USER: Test
          NEXTCLOUD_ADMIN_PASSWORD: Test
        ports:
          - 8080:80
        options: >-
          --health-cmd "curl GET 'http://Test:Test@localhost:80/ocs/v2.php/apps/serverinfo/api/v1/info' -f -H 'OCS-APIRequest: true' || exit 1"
          --health-interval 1s
          --health-timeout 2s
          --health-retries 10
          --health-start-period 3s
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Enable Deck app
        run: |
          docker exec `docker ps -f 'name=_nextcloud' -l -q` bash -c 'runuser -u www-data -- php occ app:install deck'

      - name: Make Nextcloud accessible from AVD
        run: |
          ifconfig
          docker exec `docker ps -f 'name=_nextcloud' -l -q` bash -c 'runuser -u www-data -- php occ config:system:set trusted_domains 2 --value=172.17.0.1'
          docker exec `docker ps -f 'name=_nextcloud' -l -q` bash -c 'runuser -u www-data -- php occ config:system:set trusted_domains 3 --value=172.18.0.1'
          docker exec `docker ps -f 'name=_nextcloud' -l -q` bash -c 'runuser -u www-data -- php occ config:system:set trusted_domains 4 --value=172.18.0.2'
          docker ps
          docker inspect `docker ps -f 'name=_nextcloud' -l -q`

      - name: Ping 172.17.0.1
        continue-on-error: true
        run: |
          curl -v -X GET 'http://Test:Test@172.17.0.1:8080/ocs/v2.php/cloud/capabilities?format=json' -H 'OCS-APIRequest: true' || true

      - name: Ping 172.18.0.1
        continue-on-error: true
        run: |
          curl -v -X GET 'http://Test:Test@172.18.0.1:8080/ocs/v2.php/cloud/capabilities?format=json' -H 'OCS-APIRequest: true' || true

      - name: Ping 172.18.0.2
        continue-on-error: true
        run: |
          curl -v -X GET 'http://Test:Test@172.18.0.2:8080/ocs/v2.php/cloud/capabilities?format=json' -H 'OCS-APIRequest: true' || true

      ##########################
      # AVD CACHING START      #
      ##########################

      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          sdcard-path-or-size: sdcard
          emulator-options: -gpu swiftshader_indirect -no-window -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

        ##########################
        # AVD CACHING END        #
        ##########################

      - name: Run e2e tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          sdcard-path-or-size: sdcard
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            adb shell pm uninstall -k --user 0 com.nextcloud.android.beta || true
            wget -q https://download.nextcloud.com/android/dev/latest.apk
            adb install latest.apk
            adb shell pm grant com.nextcloud.android.beta android.permission.READ_EXTERNAL_STORAGE
            adb logcat -c || true
            adb logcat *:E -v color &
            ./gradlew connectedDevDebugAndroidTest || true
            adb pull sdcard sdcard || true

      - name: List files and directories
        if: always()
        run: ls -all